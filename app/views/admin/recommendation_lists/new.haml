- content_for :title_header do
  %h1
    = t("layouts.admin.admin")
    = "-"
    = t("admin.recommend.recommendation_list")

- content_for :javascript do
  window.ST.initializeCategoriesOrder();

= render :partial => "admin/left_hand_navigation", :locals => { :links => admin_links_for(@current_community) }

.left-navi-section
  = form_for [:admin, @recommendation_list] do |f|
    = f.label :recommendation_code, "Recommendation Code (3 chars)"
    .name-locale-text_field.col-10
    = f.text_field(:recommendation_code, maxlength: 3)
    = f.label :recommendation_title,"Recommendation Title (60-chars)" 
    .name-locale-text_field.col-10
    = f.text_field(:recommendation_title, maxlength: 60) 
    %br
    %br
    = f.check_box(:active, class: "checkbox-row-checkbox js-price-enabled")
    = f.label(:active, "Active/Enabled", class: "checkbox-row-label js-price-enabled-label")
    %br
    %br
    %h2
      = t("admin.recommend.select_category") 
    - @category.each do |cat| 
      - unless cat.has_subcategories?
        .col-4
          = check_box_tag(:category,  cat.id, false, class: 'checkbox-category')
          = f.label( :category,  cat.display_name(cat), class: "checkbox-row-label js-price-enabled-label")
      - else
        - cat.children.each do |c|
          .col-4
            = check_box_tag(:category, c.id, false, class: 'checkbox-category')
            = f.label( :category,  c.display_name(c),class: "checkbox-row-label js-price-enabled-label")
    %br
      .drop-down.hidden
        %div
          = f.select :listing_ids, options_for_select([]), {} , multiple: 'multiple'
    .row
      .col-12
        .inline-button-container
          = f.submit ("Save"),class: 'button' 
        .inline-button-container
          %a{href: 'admin_recommendation_lists', class: "cancel-button"}
            .content
              = ("Cancel")

- content_for :extra_javascript do
  :javascript
    $("#recommendation_list_listing_ids").select2({
      placeholder: "Select listings",
      allowClear: true
    });
    $(document).ready(function(){
      var category_id = [];
      $('.checkbox-category').click(function(){
        $('#recommendation_list_listing_ids').html("")
        $('.checkbox-category').each(function(index,item){
          if(item.checked == true){
            $(item).html(index+1);
          }
        });
        if ($("input:checkbox:checked").length > 4){
          return false;
        }

        $(".drop-down").removeClass('hidden')
        if($(this).prop("checked") == true){
          category_id.push($(this).val());
          $.ajax({
            url:  "#{new_admin_recommendation_list_path}",
            type: "get",
            data: {category_id: category_id}
          });
        }
        else if($(this).prop("checked") == false){
          var removeItem = $(this).val()
          category_id = jQuery.grep(category_id, function(value) {
          return value != removeItem;
          });
        }
        $.ajax({
            url:  "#{new_admin_recommendation_list_path}",
            type: "get",
            data: {category_id: category_id}
        });
        console.log(category_id)
      });
    });