- content_for :javascript do
  initialize_listing_view('#{I18n.locale}');

- content_for :extra_javascript do
  :javascript
    window.ST.listing();

- content_for :title, raw(@listing.title)
- content_for :meta_author, PersonViewUtils.person_display_name(@listing.author, @current_community)
- content_for :meta_description, StringUtils.first_words(@listing.description, 15)
- content_for :meta_image, @listing.listing_images.first.image.url(:medium) if !@listing.listing_images.empty?
- dimensions = @listing.listing_images.first.get_dimensions_for_style(:medium) if !@listing.listing_images.empty?
- content_for :meta_image_width, dimensions[:width].to_s if !@listing.listing_images.empty?
- content_for :meta_image_height, dimensions[:height].to_s if !@listing.listing_images.empty?
- content_for :keywords, StringUtils.keywords(@listing.title)

- content_for :title_header do
  %h1
    %span#listing-title.listing-title= @listing.title

%script{type: "text/template", class: "template", id: "image-frame-template"}
  .listing-image-frame
    #listing-image-link.listing-image-frame-content
      .listing-image-vertical-centering{:class => "${aspectRatioClass}" }
        %img{:src => "${url}", :alt => @listing.title, :class => "listing-image ${aspectRatioClass}"}

%script{type: "text/template", class: "template", id: "image-thumbnail-template"}
  .listing-image-thumbnail-container
    %img.listing-image-thumbnail{src: "${url}"}
    .fade

= render partial: 'layouts/onboarding_popup_wrapper'

.row
  .col-8.listing-details-container
    .row
      .col-12
        - with_image_frame(@listing) do |reason, listing_images|
          - if reason == :images_ok
            .listing-image-carousel
              #listing-image-frame

              - if @listing_presenter.prev_image_id && @listing_presenter.next_image_id
                = link_to params.permit(:id, :locale).merge(image: @listing_presenter.prev_image_id), class: "listing-image-navi listing-image-navi-left", id: "listing-image-navi-left" do
                  .listing-image-navi-arrow-container
                    .listing-image-arrow-icon-container.left
                      = icon_tag("directleft", ["navigate-icon-fix", "listing-image-navi-arrow"])
                = link_to params.permit(:id, :locale).merge(image: @listing_presenter.next_image_id), class: "listing-image-navi listing-image-navi-right", id: "listing-image-navi-right" do
                  .listing-image-navi-arrow-container
                    .listing-image-arrow-icon-container.right
                      = icon_tag("directright", ["navigate-icon-fix", "listing-image-navi-arrow"])
            #thumbnail-stripe.listing-image-thumbnail-stripe

            - content_for :extra_javascript do
              :javascript
                var listingImages = #{raw listing_images.map { |image| ListingImageJSAdapter.new(image) }.to_json }
                var currentImage = #{params[:image].present? ? params[:image].to_i : listing_images.first.id};
                ST.listingImages(listingImages, currentImage);
          - else
            .listing-image-text-container
              .listing-image-frame
                .listing-image-frame-content
                  .listing-image-vertical-centering
                    .listing-no-image
                      - if reason == :images_processing
                        = t("listings.show.processing_uploaded_image")
                      - else
                        = t(".no_description")

    .row
      .col-12
        - if @listing.description && !@listing.description.blank?
          - text_with_line_breaks do
            = @listing.description
          - if( @listing_presenter.youtube_link_ids.present?)
            - @listing_presenter.youtube_link_ids.each do |youtube_id|
              .listing-description-youtube-wrapper
                %iframe.listing-description-youtube-iframe{ title: t("listings.show.youtube_video_player"), width: 640, height:390, src: "//www.youtube.com/embed/#{ youtube_id }", frameborder: 0, allowfullscreen: true}

    - @listing.custom_field_values.each do |custom_field_value|
      .row
        .col-12
          - custom_field_value.with_type do |question_type|
            = render :partial => "listings/custom_field_partials/#{question_type}", :locals => { :custom_field_value => custom_field_value }

    - if @current_community.show_listing_publishing_date?
      .row
        .col-12
          .icon-with-text-container
            = icon_tag("calendar", ["icon-part"])
            .text-part
              %b
                = t(".listing_created_at")
                = l @listing.created_at, :format => :short_date

    - if true #!@current_community.private?
      .row
        .col-12
          .listing-social
            / .listing-fb-like-button
            /   =# facebook_like(current_user?(@listing.author))
            .custom_facebook_like
              .fb-like{"data-action" => "like", "data-href" => "{URL}", "data-layout" => "button_count", "data-share" => "false", "data-show-faces" => "false"}
            - content_for :extra_javascript do
              :javascript
                (function() {
                  this.Facebook = (function() {
                    var eventsBound, rootElement;

                    function Facebook() {}

                    rootElement = null;

                    eventsBound = false;

                    Facebook.load = function() {
                      var facebookScript, firstScript, initialRoot;
                      if (!($('#fb-root').size() > 0)) {
                        initialRoot = $('<div>').attr('id', 'fb-root');
                        $('body').prepend(initialRoot);
                      }
                      if (!($('#facebook-jssdk').size() > 0)) {
                        facebookScript = document.createElement("script");
                        facebookScript.id = 'facebook-jssdk';
                        facebookScript.async = 1;
                        facebookScript.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=" + (Facebook.appId()) + "&version=v2.0";
                        firstScript = document.getElementsByTagName("script")[0];
                        firstScript.parentNode.insertBefore(facebookScript, firstScript);
                      }
                      if (!Facebook.eventsBound) {
                        return Facebook.bindEvents();
                      }
                    };

                    Facebook.bindEvents = function() {
                      if (typeof Turbolinks !== 'undefined' && Turbolinks.supported) {
                        $(document).on('page:fetch', Facebook.saveRoot).on('page:change', Facebook.restoreRoot).on('page:load', function() {
                          return typeof FB !== "undefined" && FB !== null ? FB.XFBML.parse() : void 0;
                        });
                      }
                      return Facebook.eventsBound = true;
                    };

                    Facebook.saveRoot = function() {
                      return Facebook.rootElement = $('#fb-root').detach();
                    };

                    Facebook.restoreRoot = function() {
                      if ($('#fb-root').length > 0) {
                        return $('#fb-root').replaceWith(Facebook.rootElement);
                      } else {
                        return $('body').append(Facebook.rootElement);
                      }
                    };

                    Facebook.appId = function() {
                      return 'APP-ID';
                    };

                    return Facebook;

                  })();

                  Facebook.load();

                }).call(this);
            = link_to("javascript:;", class: 'fb_share') do
              = image_tag 'facebook-logo1.png'
              %span Share on Facebook
            %a.twitter_share{:href => "https://twitter.com/share?url=https://#{request.host_with_port}/en/listings/#{@listing.id}&via=Avontage&related=#{@listing.title}&hashtags=Avontage&text=#{@listing.title}&listing_image=#{@listing.listing_images.first.image.url if @listing.listing_images.present?}", target: '_blank'}
              = image_tag 'twitter-logo-silhouette.png'
              %span Share on Twitter
            %a.twitter_share{href: "https://www.linkedin.com/shareArticle?mini=true&url=#{listing_url(@listing)}&title=#{@listing.title}&summary=#{@listing.description}&source=#{@current_community.name('en')}", onclick: "window.open(this.href,  'mywin', 'left=20, top=20, width=500, height=500, toolbar=1, resizable=0'); return false;"}
              = image_tag 'linkedin-letters.png'
              %span Share on linkedIn

    - unless (@listing.closed? && !current_user?(@listing.author)) || !@current_community.listing_comments_in_use
      .view-item
        #comments.discussion.overflow-allowed
          %h2
            = icon_tag("chat_bubble", ["icon-with_text"])
            .text-with-icon
              = t(".comments")
              %span#comment_count= "(#{@listing.comments_count})"
          #follow-links.follow-links
            = render :partial => "follow_links"
          #comment-list
            = render :partial => "comment", :collection => @listing.comments
          #comment-form
            = render :partial => "comment_form"

  %aside.col-4                     
    - if @listing.price
      .row
        .col-12
          .listing-price
            %span.listing-price-amount
              = MoneyViewUtils.to_humanized(@listing.price)
            - with_quantity_text(@current_community, @listing) do |text|
              %span.listing-price-quantity
                = text

    .row-with-divider
      .col-12
        #listing-message-links
          = render :partial => "listing_actions"
    -# Ask Seller
    .row-with-divider
      .col-12
        .listing-author
          .listing-author-avatar
            = medium_avatar_thumb(@listing.author, {:class => "listing-author-avatar-image"})
          .listing-author-details
            .listing-author-name
              = link_to PersonViewUtils.person_display_name(@listing.author, @current_community), @listing.author, :id => "listing-author-link", :class => "listing-author-name-link", :title => "#{PersonViewUtils.person_display_name(@listing.author, @current_community)}"
            - if @listing.author != @current_user
              .listing-author-contact
                %a#listing-contact{href: new_person_person_message_path(person_id: @listing.author, listing_id: @listing.id), :class => "listing-author-contact-buttonx custom_contact button"}
                  .content
                    = t(".ask_seller")
    -# Member Profile Info
    .row-with-divider
      .col-12
        .parent
          %span
            = t(".profile_info")
          .profile-about-me.custom_padding
            .name_text.author_description
              - if @listing.author.description && !@listing.author.description.blank?
                - if @listing.author.description.length > 250
                  = truncate(markdown(@listing.author.description), length: 250, escape: false)
                  .more_btn
                    = link_to 'Read More', '', class: "read-more"
                - else
                  = markdown(@listing.author.description)   

            -#    
              .profile_img
                = huge_avatar_thumb(@listing.author)                    
    -# Reviews
    - if @listing_presenter.received_testimonials.size > 0
      .row-with-divider.listing-author-activity
        .col-12
          %i.listing-author-activity-icon{:class => icon_class("testimonial")}
          .listing-author-activity-item
            .listing-author-activity-value
              - if @listing_presenter.received_testimonials.size > 0
                = @listing_presenter.feedback_positive_percentage.to_s + "%"
                = t("people.show.positive")
                = "(#{@listing_presenter.received_positive_testimonials.size}/#{@listing_presenter.received_testimonials.size})"
              - else
                = t(".no_reviews")
            .listing-author-activity-description
              = t(".feedback")                         

    -# Map
    - if @listing.origin_loc && @listing.origin_loc.address != ""
      .row
        .col-12
          #googlemap
            = render :partial => "googlemap", :locals => { :listing => @listing}
            = render :partial => "origin", :locals => { :origin_loc => @listing.origin_loc }
            
  -# Author other listing           
  - unless @other_listings.blank?
    .row-with-dynamiv-divider
    .col-8.other-offers
      .row.mr-0
        #profile-listings-list.custom_styling
          %span
            = t(".other_offers")
          .padding_left
            = render :partial => 'author_other_listings', :locals => {person: @listing.author, listings: @other_listings}

    .col-4

- content_for :extra_javascript do
  :javascript
    $('.fb_share').click(function(){
      var url = '#{listing_url(@listing)}';
      return popitup("https://www.facebook.com/sharer/sharer.php?u="+ url)
    })
    function popitup(url) {
      newwindow=window.open(url,'name','height=600,width=650');
      if (window.focus) {newwindow.focus()}
      return false;
    }

    $(".read-more").on('click', function(e){
      e.preventDefault()
      $('.author_description').html("#{escape_javascript markdown(@listing.author.description)}");
    })
